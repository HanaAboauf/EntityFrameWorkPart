// <auto-generated />
using System;
using EF_03.DatabaseContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_03.Migrations
{
    [DbContext(typeof(AirlineDbContext))]
    [Migration("20250920085019_CreateAirlineDB")]
    partial class CreateAirlineDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_03.Models.AirCraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AirlineId")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.ToTable("AirCrafts");
                });

            modelBuilder.Entity("EF_03.Models.AircraftRoute", b =>
                {
                    b.Property<int>("AirCraftId")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Arrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Departure")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AirCraftId", "RouteId");

                    b.HasIndex("RouteId");

                    b.ToTable("AircraftRoute");
                });

            modelBuilder.Entity("EF_03.Models.Airline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("employeesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Airlines");
                });

            modelBuilder.Entity("EF_03.Models.AirlinesPhones", b =>
                {
                    b.Property<int>("AirlineId")
                        .HasColumnType("int");

                    b.Property<string>("phones")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AirlineId", "phones");

                    b.ToTable("AirlinesPhones");
                });

            modelBuilder.Entity("EF_03.Models.Crew", b =>
                {
                    b.Property<int>("AirCraftId")
                        .HasColumnType("int");

                    b.Property<string>("Assis_Pilot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Maj_Pilot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AirCraftId");

                    b.ToTable("Crews");
                });

            modelBuilder.Entity("EF_03.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AirlineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EF_03.Models.EmployeeQualifications", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Qualifications")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EmployeeId", "Qualifications");

                    b.ToTable("EmployeeQualifications");
                });

            modelBuilder.Entity("EF_03.Models.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("EF_03.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AirlineId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("EF_03.Models.AirCraft", b =>
                {
                    b.HasOne("EF_03.Models.Airline", "Airline")
                        .WithMany("AirCrafts")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");
                });

            modelBuilder.Entity("EF_03.Models.AircraftRoute", b =>
                {
                    b.HasOne("EF_03.Models.AirCraft", "AirCraft")
                        .WithMany("AircraftRoutes")
                        .HasForeignKey("AirCraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_03.Models.Route", "Route")
                        .WithMany("AircraftRoutes")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AirCraft");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("EF_03.Models.AirlinesPhones", b =>
                {
                    b.HasOne("EF_03.Models.Airline", "Airline")
                        .WithMany("AirlinesPhones")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");
                });

            modelBuilder.Entity("EF_03.Models.Crew", b =>
                {
                    b.HasOne("EF_03.Models.AirCraft", "AirCraft")
                        .WithOne("Crew")
                        .HasForeignKey("EF_03.Models.Crew", "AirCraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AirCraft");
                });

            modelBuilder.Entity("EF_03.Models.Employee", b =>
                {
                    b.HasOne("EF_03.Models.Airline", "Airline")
                        .WithMany("employees")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");
                });

            modelBuilder.Entity("EF_03.Models.EmployeeQualifications", b =>
                {
                    b.HasOne("EF_03.Models.Employee", "Employee")
                        .WithMany("EmployeeQualifications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EF_03.Models.Transaction", b =>
                {
                    b.HasOne("EF_03.Models.Airline", "Airline")
                        .WithMany("Transactions")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");
                });

            modelBuilder.Entity("EF_03.Models.AirCraft", b =>
                {
                    b.Navigation("AircraftRoutes");

                    b.Navigation("Crew")
                        .IsRequired();
                });

            modelBuilder.Entity("EF_03.Models.Airline", b =>
                {
                    b.Navigation("AirCrafts");

                    b.Navigation("AirlinesPhones");

                    b.Navigation("Transactions");

                    b.Navigation("employees");
                });

            modelBuilder.Entity("EF_03.Models.Employee", b =>
                {
                    b.Navigation("EmployeeQualifications");
                });

            modelBuilder.Entity("EF_03.Models.Route", b =>
                {
                    b.Navigation("AircraftRoutes");
                });
#pragma warning restore 612, 618
        }
    }
}
